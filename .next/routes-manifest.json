{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/api/auth/[...nextauth]",
      "regex": "^/api/auth/(.+?)(?:/)?$",
      "routeKeys": {
        "nxtPnextauth": "nxtPnextauth"
      },
      "namedRegex": "^/api/auth/(?<nxtPnextauth>.+?)(?:/)?$"
    },
    {
      "page": "/blogs/[slug]",
      "regex": "^/blogs/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/blogs/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/services/[slug]",
      "regex": "^/services/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/services/(?<nxtPslug>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/aboutus",
      "regex": "^/aboutus(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/aboutus(?:/)?$"
    },
    {
      "page": "/appartment",
      "regex": "^/appartment(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/appartment(?:/)?$"
    },
    {
      "page": "/blogs",
      "regex": "^/blogs(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/blogs(?:/)?$"
    },
    {
      "page": "/contactus",
      "regex": "^/contactus(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/contactus(?:/)?$"
    },
    {
      "page": "/documentation",
      "regex": "^/documentation(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/documentation(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/luxury-villa",
      "regex": "^/luxury\\-villa(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/luxury\\-villa(?:/)?$"
    },
    {
      "page": "/office-spaces",
      "regex": "^/office\\-spaces(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/office\\-spaces(?:/)?$"
    },
    {
      "page": "/residential-homes",
      "regex": "^/residential\\-homes(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/residential\\-homes(?:/)?$"
    },
    {
      "page": "/services",
      "regex": "^/services(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/services(?:/)?$"
    },
    {
      "page": "/signin",
      "regex": "^/signin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/signin(?:/)?$"
    },
    {
      "page": "/signup",
      "regex": "^/signup(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/signup(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}